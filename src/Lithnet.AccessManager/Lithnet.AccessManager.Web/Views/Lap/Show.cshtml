@{
    ViewBag.Title = UIMessages.HeadingPasswordDetails;
}

@model Lithnet.AccessManager.Web.Models.CurrentPasswordModel
@inject Lithnet.AccessManager.Web.Internal.IPhoneticPasswordTextProvider textProvider;
@inject Lithnet.AccessManager.Web.Internal.IHtmlPasswordProvider htmlProvider;

<div class="form-container">

    <header>
        @UIMessages.HeadingPasswordDetails
    </header>
    <fieldset>
        <section>
            <label class="title">@UIMessages.ComputerName</label>
            <div class="input-group">
                <input class="resultsText" id="ComputerName" type="text" value="@Html.DisplayFor(modelItem => Model.ComputerName)" readonly="readonly" />
            </div>
        </section>

        <section>
            <label class="title">@UIMessages.Password</label>
            <div class="input-group">
                <div class="resultsText password-field" id="pwd">
                    @Html.Raw(htmlProvider.GetHtmlPassword(Model.Password))
                </div>
                <span id="inputGroupAppend" class="input-group-append">
                    <button id="copy-button" type="button" data-clipboard-text="@Model.Password">
                        <i class="far fa-copy"></i>
                    </button>
                </span>
            </div>

            <div>
                <button id="buttonShowPhonetic" type="button" data-toggle="collapse" data-target="#panelPhonetic">
                    <i class="fa fa-bullhorn"></i>
                </button>
                <div id="panelPhonetic" class="collapse">
                    @foreach (string w in textProvider.GetPhoneticText(Model.Password))
                    {
                        <div>
                            @Html.Label(w)<br />
                        </div>
                    }
                </div>
            </div>

        </section>

        <section>
            <label class="title">@UIMessages.ValidUntil</label>
            <div class="input-group">
                <input class="resultsText" id="ValidDate" type="text" value="@Html.DisplayFor(modelItem => Model.ValidUntil)" readonly="readonly" />
            </div>
        </section>
    </fieldset>

    <footer>
        <div class="center-content">
            @using (Html.BeginForm("Get", "Lap", FormMethod.Get))
            {
                <button type="submit" class="btn btn-primary">@UIMessages.ButtonNewRequest</button>
            }
        </div>
    </footer>
</div>

@section Scripts {
    <script src="~/js/clipboard.js"></script>
    <script src="@Url.Content("~/js/show.js")"></script>
}